{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/react-drag-and-drop/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useMemo } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport \"./index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst baseStyle = {\n  display: \"flex\",\n  flexDirection: \"column\",\n  width: 200,\n  height: 150\n};\nconst borderNormalStyle = {\n  border: \"1px dotted #888\"\n};\nconst borderDragStyle = {\n  border: \"1px solid #00f\",\n  transition: 'border .5s ease-in-out'\n};\n\nfunction App() {\n  _s();\n\n  const onDrop = useCallback(acceptedFiles => {\n    // Do something with the files\n    console.log(\"acceptedFiles:\", acceptedFiles);\n  }, []);\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive,\n    open,\n    acceptedFiles\n  } = useDropzone({\n    onDrop\n  });\n  const style = useMemo(() => ({ ...baseStyle,\n    ...(isDragActive ? borderDragStyle : borderNormalStyle)\n  }), [isDragActive]);\n\n  const fileList = files => files.map(file => /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [file.path, \" - \", file.size, \" bytes\"]\n  }, file.path, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 7\n  }, this));\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", { ...getRootProps({\n        className: 'dropzone'\n      }),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), isDragActive ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u3053\\u3053\\u306B\\u30D5\\u30A1\\u30A4\\u30EB\\u3092\\u30C9\\u30E9\\u30C3\\u30AF\\uFF06\\u30C9\\u30ED\\u30C3\\u30D7\\u3059\\u308B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"aside\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Files\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: fileList(acceptedFiles)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"lh1cyebrY1cfLVja1p+ztcmaHEs=\", false, function () {\n  return [useDropzone];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/usr/src/app/react-drag-and-drop/src/App.tsx"],"names":["React","useCallback","useMemo","useDropzone","baseStyle","display","flexDirection","width","height","borderNormalStyle","border","borderDragStyle","transition","App","onDrop","acceptedFiles","console","log","getRootProps","getInputProps","isDragActive","open","style","fileList","files","map","file","path","size","className"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,OAA7B,QAAuD,OAAvD;AACA,SAAuBC,WAAvB,QAA0C,gBAA1C;AACA,OAAO,aAAP;;AAEA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,OAAO,EAAE,MADO;AAEhBC,EAAAA,aAAa,EAAE,QAFC;AAGhBC,EAAAA,KAAK,EAAE,GAHS;AAIhBC,EAAAA,MAAM,EAAE;AAJQ,CAAlB;AAMA,MAAMC,iBAAiB,GAAG;AACxBC,EAAAA,MAAM,EAAE;AADgB,CAA1B;AAGA,MAAMC,eAAe,GAAG;AACtBD,EAAAA,MAAM,EAAE,gBADc;AAEtBE,EAAAA,UAAU,EAAE;AAFU,CAAxB;;AAKA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAMC,MAAM,GAAGb,WAAW,CAAEc,aAAD,IAAmB;AAC5C;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BF,aAA9B;AACD,GAHyB,EAGvB,EAHuB,CAA1B;AAIA,QAAM;AAAEG,IAAAA,YAAF;AAAgBC,IAAAA,aAAhB;AAA+BC,IAAAA,YAA/B;AAA6CC,IAAAA,IAA7C;AAAmDN,IAAAA;AAAnD,MAAqEZ,WAAW,CAAC;AAAEW,IAAAA;AAAF,GAAD,CAAtF;AACA,QAAMQ,KAAK,GAAGpB,OAAO,CAAC,OACpB,EAAE,GAAGE,SAAL;AAAgB,QAAIgB,YAAY,GAAGT,eAAH,GAAqBF,iBAArC;AAAhB,GADoB,CAAD,EAElB,CAACW,YAAD,CAFkB,CAArB;;AAGA,QAAMG,QAAQ,GAAIC,KAAD,IACfA,KAAK,CAACC,GAAN,CAAUC,IAAI,iBACZ;AAAA,eACGA,IAAI,CAACC,IADR,SACiBD,IAAI,CAACE,IADtB;AAAA,KAASF,IAAI,CAACC,IAAd;AAAA;AAAA;AAAA;AAAA,UADF,CADF;;AAOA,sBACE;AAAS,IAAA,SAAS,EAAC,WAAnB;AAAA,2BACE,oBAAST,YAAY,CAAC;AAAEW,QAAAA,SAAS,EAAE;AAAb,OAAD,CAArB;AAAA,8BACE,sBAAWV,aAAa;AAAxB;AAAA;AAAA;AAAA;AAAA,cADF,EAEGC,YAAY,gBACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADW,gBAGX;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,oBAAKG,QAAQ,CAACR,aAAD;AAAb;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;GAhCQF,G;UAMoEV,W;;;KANpEU,G;AAkCT,eAAeA,GAAf","sourcesContent":["import React, { useCallback, useMemo, ReactNode } from \"react\";\nimport { FileWithPath, useDropzone } from \"react-dropzone\";\nimport \"./index.css\";\n\nconst baseStyle = {\n  display: \"flex\",\n  flexDirection: \"column\",\n  width: 200,\n  height: 150,\n};\nconst borderNormalStyle = {\n  border: \"1px dotted #888\"\n};\nconst borderDragStyle = {\n  border: \"1px solid #00f\",\n  transition: 'border .5s ease-in-out'\n};\n\nfunction App() {\n\n  const onDrop = useCallback((acceptedFiles) => {\n    // Do something with the files\n    console.log(\"acceptedFiles:\", acceptedFiles);\n  }, []);\n  const { getRootProps, getInputProps, isDragActive, open, acceptedFiles } = useDropzone({ onDrop });\n  const style = useMemo(() => (\n    { ...baseStyle, ...(isDragActive ? borderDragStyle : borderNormalStyle)}\n  ), [isDragActive]);\n  const fileList = (files: FileWithPath[]): ReactNode => (\n    files.map(file => (\n      <li key={file.path}>\n        {file.path} - {file.size} bytes\n      </li>\n    ))\n  );\n  return (\n    <section className=\"container\">\n      <div {...getRootProps({ className: 'dropzone' })}>\n        <input {...getInputProps()} />\n        {isDragActive ? (\n          <p>ここにファイルをドラック＆ドロップする</p>\n        ) : (\n          <aside>\n            <h4>Files</h4>\n            <ul>{fileList(acceptedFiles)}</ul>\n          </aside>\n        )}\n      </div>\n    </section>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}