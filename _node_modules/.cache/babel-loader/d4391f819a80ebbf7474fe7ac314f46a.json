{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/react-drag-and-drop/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport { useCallback, useMemo } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst baseStyle = {\n  display: \"flex\",\n  flexDirection: \"column\",\n  width: 200,\n  height: 150,\n  marginLeft: 20,\n  padding: 10\n};\nconst borderNormalStyle = {\n  border: \"1px dotted #888\"\n};\nconst borderDragStyle = {\n  border: \"1px solid #00f\",\n  transition: \"border .5s ease-in-out\"\n};\n\nfunction App() {\n  _s();\n\n  const onDrop = useCallback(files => {\n    files.forEach(file => {\n      const reader = new FileReader();\n\n      reader.onabort = () => console.log('file reading was aborted');\n\n      reader.onerror = () => console.log('file reading has failed');\n\n      reader.onload = () => {\n        const binaryStr = reader.result;\n        console.log(file.name, binaryStr);\n      };\n\n      reader.readAsArrayBuffer(file);\n      console.log(reader.removeEventListener);\n    });\n    console.log(files);\n  }, []);\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive,\n    open,\n    acceptedFiles\n  } = useDropzone({\n    onDrop,\n    noClick: true\n  });\n  const style = useMemo(() => ({ ...baseStyle,\n    ...(isDragActive ? borderDragStyle : borderNormalStyle)\n  }), [isDragActive]);\n  const files = useMemo(() => acceptedFiles.map(file => /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [file.stream, file.path, \" - \", file.size, \" bytes\"]\n  }, file.path, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 11\n  }, this)), [acceptedFiles]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", { ...getRootProps({\n        style\n      }),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), isDragActive ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u8907\\u6570\\u30D5\\u30A1\\u30A4\\u30EB\\u3067\\u3082\\u30D5\\u30A1\\u30A4\\u30EB\\u9078\\u629E\\u306E\\u4E21\\u65B9OK\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u3053\\u3053\\u306B\\u30C9\\u30E9\\u30C3\\u30B0\\uFF06\\u30C9\\u30ED\\u30C3\\u30D7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: open,\n        children: \"Select files\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"aside\", {\n      className: \"mt-1\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"mb-3\",\n        children: \"File\\u30EA\\u30B9\\u30C8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: files\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 7\n  }, this);\n}\n\n_s(App, \"3wsJeDQYvX+3wK7SCG56IZMPli8=\", false, function () {\n  return [useDropzone];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/usr/src/app/react-drag-and-drop/src/App.tsx"],"names":["useCallback","useMemo","useDropzone","baseStyle","display","flexDirection","width","height","marginLeft","padding","borderNormalStyle","border","borderDragStyle","transition","App","onDrop","files","forEach","file","reader","FileReader","onabort","console","log","onerror","onload","binaryStr","result","name","readAsArrayBuffer","removeEventListener","getRootProps","getInputProps","isDragActive","open","acceptedFiles","noClick","style","map","stream","path","size"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,OAAtB,QAAqC,OAArC;AACA,SAASC,WAAT,QAA0C,gBAA1C;;AAEA,MAAMC,SAAS,GAAG;AACdC,EAAAA,OAAO,EAAE,MADK;AAEdC,EAAAA,aAAa,EAAE,QAFD;AAGdC,EAAAA,KAAK,EAAE,GAHO;AAIdC,EAAAA,MAAM,EAAE,GAJM;AAKdC,EAAAA,UAAU,EAAE,EALE;AAMdC,EAAAA,OAAO,EAAE;AANK,CAAlB;AAQA,MAAMC,iBAAiB,GAAG;AACtBC,EAAAA,MAAM,EAAE;AADc,CAA1B;AAGA,MAAMC,eAAe,GAAG;AACpBD,EAAAA,MAAM,EAAE,gBADY;AAEpBE,EAAAA,UAAU,EAAE;AAFQ,CAAxB;;AAIA,SAASC,GAAT,GAAe;AAAA;;AACX,QAAMC,MAAM,GAAGf,WAAW,CAAEgB,KAAD,IAAW;AACpCA,IAAAA,KAAK,CAACC,OAAN,CAAeC,IAAD,IAAwB;AACpC,YAAMC,MAAM,GAAG,IAAIC,UAAJ,EAAf;;AACAD,MAAAA,MAAM,CAACE,OAAP,GAAiB,MAAMC,OAAO,CAACC,GAAR,CAAY,0BAAZ,CAAvB;;AACAJ,MAAAA,MAAM,CAACK,OAAP,GAAiB,MAAMF,OAAO,CAACC,GAAR,CAAY,yBAAZ,CAAvB;;AACAJ,MAAAA,MAAM,CAACM,MAAP,GAAgB,MAAM;AACpB,cAAMC,SAAS,GAAGP,MAAM,CAACQ,MAAzB;AACAL,QAAAA,OAAO,CAACC,GAAR,CAAYL,IAAI,CAACU,IAAjB,EAAuBF,SAAvB;AACD,OAHD;;AAIAP,MAAAA,MAAM,CAACU,iBAAP,CAAyBX,IAAzB;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAM,CAACW,mBAAnB;AACD,KAVD;AAWAR,IAAAA,OAAO,CAACC,GAAR,CAAYP,KAAZ;AACD,GAbyB,EAavB,EAbuB,CAA1B;AAcA,QAAM;AACJe,IAAAA,YADI;AAEJC,IAAAA,aAFI;AAGJC,IAAAA,YAHI;AAIJC,IAAAA,IAJI;AAKJC,IAAAA;AALI,MAMFjC,WAAW,CAAC;AAAEa,IAAAA,MAAF;AAAUqB,IAAAA,OAAO,EAAE;AAAnB,GAAD,CANf;AAOA,QAAMC,KAAK,GAAGpC,OAAO,CAAC,OAClB,EAAE,GAAGE,SAAL;AAAgB,QAAI8B,YAAY,GAAGrB,eAAH,GAAqBF,iBAArC;AAAhB,GADkB,CAAD,EAElB,CAACuB,YAAD,CAFkB,CAArB;AAGA,QAAMjB,KAAK,GAAGf,OAAO,CAAC,MAClBkC,aAAa,CAACG,GAAd,CAAmBpB,IAAD,iBAChB;AAAA,eACGA,IAAI,CAACqB,MADR,EAEGrB,IAAI,CAACsB,IAFR,SAEiBtB,IAAI,CAACuB,IAFtB;AAAA,KAASvB,IAAI,CAACsB,IAAd;AAAA;AAAA;AAAA;AAAA,UADF,CADiB,EAOlB,CAACL,aAAD,CAPkB,CAArB;AAQA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE,oBAASJ,YAAY,CAAC;AAAEM,QAAAA;AAAF,OAAD,CAArB;AAAA,8BACE,sBAAWL,aAAa;AAAxB;AAAA;AAAA;AAAA;AAAA,cADF,EAGMC,YAAY,gBACV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADU,gBAEV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALR,eAOE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAEC,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAUE;AAAO,MAAA,SAAS,EAAC,MAAjB;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBACGlB;AADH;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBH;;GApDQF,G;UAqBDZ,W;;;KArBCY,G;AAsDT,eAAeA,GAAf","sourcesContent":["import { useCallback, useMemo } from 'react';\nimport { useDropzone, FileWithPath } from 'react-dropzone';\n\nconst baseStyle = {\n    display: \"flex\",\n    flexDirection: \"column\" as \"column\",\n    width: 200,\n    height: 150,\n    marginLeft: 20,\n    padding: 10\n};\nconst borderNormalStyle = {\n    border: \"1px dotted #888\"\n};\nconst borderDragStyle = {\n    border: \"1px solid #00f\",\n    transition: \"border .5s ease-in-out\"\n};\nfunction App() {\n    const onDrop = useCallback((files) => {\n      files.forEach((file: FileWithPath) => {\n        const reader = new FileReader()\n        reader.onabort = () => console.log('file reading was aborted')\n        reader.onerror = () => console.log('file reading has failed')\n        reader.onload = () => {\n          const binaryStr = reader.result\n          console.log(file.name, binaryStr)\n        }\n        reader.readAsArrayBuffer(file);\n        console.log(reader.removeEventListener)\n      });\n      console.log(files)\n    }, []);\n    const {\n      getRootProps,\n      getInputProps,\n      isDragActive,\n      open,\n      acceptedFiles\n    } = useDropzone({ onDrop, noClick: true });\n    const style = useMemo(() => (\n        { ...baseStyle, ...(isDragActive ? borderDragStyle : borderNormalStyle)}\n    ), [isDragActive]);\n    const files = useMemo(() => \n        acceptedFiles.map((file: FileWithPath) => (\n          <li key={file.path}>\n            {file.stream}\n            {file.path} - {file.size} bytes\n          </li>\n        )\n    ), [acceptedFiles]);\n    return (\n      <div className=\"container\">\n        <div {...getRootProps({ style })}>\n          <input {...getInputProps()} />\n            {\n              isDragActive ?\n                <p>複数ファイルでもファイル選択の両方OK</p> :\n                <p>ここにドラッグ＆ドロップ</p>\n            }\n          <button type=\"button\" onClick={open}>Select files</button>\n        </div>\n        <aside className=\"mt-1\">\n          <h4 className=\"mb-3\">Fileリスト</h4>\n          <ul>\n            {files}\n          </ul>\n        </aside>\n      </div>\n    );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}