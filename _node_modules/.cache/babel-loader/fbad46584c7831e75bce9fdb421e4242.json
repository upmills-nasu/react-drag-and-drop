{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/react-drag-and-drop/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport { useCallback, useMemo } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst baseStyle = {\n  display: \"flex\",\n  flexDirection: \"column\",\n  width: 200,\n  height: 150\n};\nconst borderNormalStyle = {\n  border: \"1px dotted #888\"\n};\nconst borderDragStyle = {\n  border: \"1px solid #00f\",\n  transition: \"border .5s ease-in-out\"\n};\n\nfunction App() {\n  _s();\n\n  const onDrop = useCallback(acceptedFiles => {\n    console.log('acceptedFiles:', acceptedFiles);\n  }, []);\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive,\n    open,\n    acceptedFiles\n  } = useDropzone({\n    onDrop,\n    noClick: true\n  });\n  const style = useMemo(() => ({ ...baseStyle,\n    ...(isDragActive ? borderDragStyle : borderNormalStyle)\n  }), [isDragActive]);\n  const files = useMemo(() => acceptedFiles.map(file => /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [file.path, \" - \", file.size, \" bytes\"]\n  }, file.path, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 13\n  }, this)), [acceptedFiles]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", { ...getRootProps({\n        style\n      }),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), isDragActive ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u3053\\u3053\\u306B\\u30C9\\u30E9\\u30C3\\u30B0\\uFF06\\u30C9\\u30ED\\u30C3\\u30D7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u8907\\u6570\\u30D5\\u30A1\\u30A4\\u30EB\\u3067\\u3082OK\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: open,\n        className: \"btn btn-primary align-self-center\",\n        children: \"Select files\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"aside\", {\n      className: \"mt-1\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"mb-3\",\n        children: \"File\\u30EA\\u30B9\\u30C8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: files\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 7\n  }, this);\n}\n\n_s(App, \"3wsJeDQYvX+3wK7SCG56IZMPli8=\", false, function () {\n  return [useDropzone];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/usr/src/app/react-drag-and-drop/src/App.tsx"],"names":["useCallback","useMemo","useDropzone","baseStyle","display","flexDirection","width","height","borderNormalStyle","border","borderDragStyle","transition","App","onDrop","acceptedFiles","console","log","getRootProps","getInputProps","isDragActive","open","noClick","style","files","map","file","path","size"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,OAAtB,QAAqC,OAArC;AACA,SAASC,WAAT,QAA0C,gBAA1C;;AAEA,MAAMC,SAAS,GAAG;AACdC,EAAAA,OAAO,EAAE,MADK;AAEdC,EAAAA,aAAa,EAAE,QAFD;AAGdC,EAAAA,KAAK,EAAE,GAHO;AAIdC,EAAAA,MAAM,EAAE;AAJM,CAAlB;AAMA,MAAMC,iBAAiB,GAAG;AACtBC,EAAAA,MAAM,EAAE;AADc,CAA1B;AAGA,MAAMC,eAAe,GAAG;AACpBD,EAAAA,MAAM,EAAE,gBADY;AAEpBE,EAAAA,UAAU,EAAE;AAFQ,CAAxB;;AAIA,SAASC,GAAT,GAAe;AAAA;;AACX,QAAMC,MAAM,GAAGb,WAAW,CAAEc,aAAD,IAAmB;AAC1CC,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BF,aAA9B;AACH,GAFyB,EAEvB,EAFuB,CAA1B;AAGA,QAAM;AACJG,IAAAA,YADI;AAEJC,IAAAA,aAFI;AAGJC,IAAAA,YAHI;AAIJC,IAAAA,IAJI;AAKJN,IAAAA;AALI,MAMFZ,WAAW,CAAC;AAAEW,IAAAA,MAAF;AAAUQ,IAAAA,OAAO,EAAE;AAAnB,GAAD,CANf;AAOA,QAAMC,KAAK,GAAGrB,OAAO,CAAC,OAClB,EAAE,GAAGE,SAAL;AAAgB,QAAIgB,YAAY,GAAGT,eAAH,GAAqBF,iBAArC;AAAhB,GADkB,CAAD,EAElB,CAACW,YAAD,CAFkB,CAArB;AAGA,QAAMI,KAAK,GAAGtB,OAAO,CAAC,MAClBa,aAAa,CAACU,GAAd,CAAmBC,IAAD,iBACd;AAAA,eACGA,IAAI,CAACC,IADR,SACiBD,IAAI,CAACE,IADtB;AAAA,KAASF,IAAI,CAACC,IAAd;AAAA;AAAA;AAAA;AAAA,UADJ,CADiB,EAMlB,CAACZ,aAAD,CANkB,CAArB;AAOA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE,oBAASG,YAAY,CAAC;AAAEK,QAAAA;AAAF,OAAD,CAArB;AAAA,8BACE,sBAAWJ,aAAa;AAAxB;AAAA;AAAA;AAAA;AAAA,cADF,EAGMC,YAAY,gBACV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADU,gBAEV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALR,eAOE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAEC,IAA/B;AAAqC,QAAA,SAAS,EAAC,mCAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAUE;AAAO,MAAA,SAAS,EAAC,MAAjB;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBAAKG;AAAL;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBH;;GAtCQX,G;UAUDV,W;;;KAVCU,G;AAwCT,eAAeA,GAAf","sourcesContent":["import { useCallback, useMemo } from 'react';\nimport { useDropzone, FileWithPath } from 'react-dropzone';\n\nconst baseStyle = {\n    display: \"flex\",\n    flexDirection: \"column\" as \"column\",\n    width: 200,\n    height: 150,\n};\nconst borderNormalStyle = {\n    border: \"1px dotted #888\"\n};\nconst borderDragStyle = {\n    border: \"1px solid #00f\",\n    transition: \"border .5s ease-in-out\"\n};\nfunction App() {\n    const onDrop = useCallback((acceptedFiles) => {\n        console.log('acceptedFiles:', acceptedFiles);\n    }, []);\n    const {\n      getRootProps,\n      getInputProps,\n      isDragActive,\n      open,\n      acceptedFiles\n    } = useDropzone({ onDrop, noClick: true });\n    const style = useMemo(() => (\n        { ...baseStyle, ...(isDragActive ? borderDragStyle : borderNormalStyle)}\n    ), [isDragActive]);\n    const files = useMemo(() => \n        acceptedFiles.map((file: FileWithPath) => (\n            <li key={file.path}>\n              {file.path} - {file.size} bytes\n            </li>\n        )\n    ), [acceptedFiles]);\n    return (\n      <div className=\"container\">\n        <div {...getRootProps({ style })}>\n          <input {...getInputProps()} />\n            {\n              isDragActive ?\n                <p>ここにドラッグ＆ドロップ</p> :\n                <p>複数ファイルでもOK</p>\n            }\n          <button type=\"button\" onClick={open} className=\"btn btn-primary align-self-center\">Select files</button>\n        </div>\n        <aside className=\"mt-1\">\n          <h4 className=\"mb-3\">Fileリスト</h4>\n          <ul>{files}</ul>\n        </aside>\n      </div>\n    );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}