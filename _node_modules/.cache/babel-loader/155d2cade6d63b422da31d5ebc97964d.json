{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/react-drag-and-drop/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport { useCallback, useMemo } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport \"./styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst baseStyle = {\n  width: 200,\n  height: 150,\n  margin: 10\n};\nconst borderNormalStyle = {\n  border: \"1px dotted #888\"\n};\nconst borderDragStyle = {\n  border: \"1px solid #00f\",\n  transition: \"border .5s ease-in-out\"\n};\n\nfunction App() {\n  _s();\n\n  const onDrop = useCallback(acceptedFiles => {\n    // Do something with the files\n    console.log(\"acceptedFiles:\", acceptedFiles);\n  }, []);\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive\n  } = useDropzone({\n    onDrop\n  });\n  const style = useMemo(() => ({ ...baseStyle,\n    ...(isDragActive ? borderDragStyle : borderNormalStyle)\n  }), [isDragActive]);\n  return /*#__PURE__*/_jsxDEV(\"div\", { ...getRootProps({\n      style\n    }),\n    children: [/*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), isDragActive ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Drop the files here ...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Drag 'n' drop some files here, or click to select files\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"NUo7jYJDK8MrCggIgw9TVBPR69k=\", false, function () {\n  return [useDropzone];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/usr/src/app/react-drag-and-drop/src/App.tsx"],"names":["useCallback","useMemo","useDropzone","baseStyle","width","height","margin","borderNormalStyle","border","borderDragStyle","transition","App","onDrop","acceptedFiles","console","log","getRootProps","getInputProps","isDragActive","style"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,OAAtB,QAAqC,OAArC;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,OAAO,cAAP;;AAEA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,KAAK,EAAE,GADS;AAEhBC,EAAAA,MAAM,EAAE,GAFQ;AAGhBC,EAAAA,MAAM,EAAE;AAHQ,CAAlB;AAKA,MAAMC,iBAAiB,GAAG;AACxBC,EAAAA,MAAM,EAAE;AADgB,CAA1B;AAGA,MAAMC,eAAe,GAAG;AACtBD,EAAAA,MAAM,EAAE,gBADc;AAEtBE,EAAAA,UAAU,EAAE;AAFU,CAAxB;;AAIA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAMC,MAAM,GAAGZ,WAAW,CAAEa,aAAD,IAAmB;AAC5C;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BF,aAA9B;AACD,GAHyB,EAGvB,EAHuB,CAA1B;AAIA,QAAM;AAAEG,IAAAA,YAAF;AAAgBC,IAAAA,aAAhB;AAA+BC,IAAAA;AAA/B,MAAgDhB,WAAW,CAAC;AAAEU,IAAAA;AAAF,GAAD,CAAjE;AACA,QAAMO,KAAK,GAAGlB,OAAO,CACnB,OAAO,EACL,GAAGE,SADE;AAEL,QAAIe,YAAY,GAAGT,eAAH,GAAqBF,iBAArC;AAFK,GAAP,CADmB,EAKnB,CAACW,YAAD,CALmB,CAArB;AAOA,sBACE,oBAASF,YAAY,CAAC;AAAEG,MAAAA;AAAF,KAAD,CAArB;AAAA,4BACE,sBAAWF,aAAa;AAAxB;AAAA;AAAA;AAAA;AAAA,YADF,EAEGC,YAAY,gBACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADW,gBAGX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GAvBQP,G;UAK+CT,W;;;KAL/CS,G;AAyBT,eAAeA,GAAf","sourcesContent":["import { useCallback, useMemo } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport \"./styles.css\";\n\nconst baseStyle = {\n  width: 200,\n  height: 150,\n  margin: 10\n};\nconst borderNormalStyle = {\n  border: \"1px dotted #888\"\n};\nconst borderDragStyle = {\n  border: \"1px solid #00f\",\n  transition: \"border .5s ease-in-out\"\n};\nfunction App() {\n  const onDrop = useCallback((acceptedFiles) => {\n    // Do something with the files\n    console.log(\"acceptedFiles:\", acceptedFiles);\n  }, []);\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\n  const style = useMemo(\n    () => ({\n      ...baseStyle,\n      ...(isDragActive ? borderDragStyle : borderNormalStyle)\n    }),\n    [isDragActive]\n  );\n  return (\n    <div {...getRootProps({ style })}>\n      <input {...getInputProps()} />\n      {isDragActive ? (\n        <p>Drop the files here ...</p>\n      ) : (\n        <p>Drag 'n' drop some files here, or click to select files</p>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}